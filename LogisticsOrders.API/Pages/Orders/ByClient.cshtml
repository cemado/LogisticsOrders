@page
@using X.PagedList.Mvc.Core
@model LogisticsOrders.API.Pages.Orders.ByClientModel

<h2>Órdenes por Cliente</h2>

<form method="get" class="mb-3">
    <div class="row g-2">
        <div class="col">
            <input type="text" name="ClientName" value="@Model.ClientName" class="form-control" placeholder="Nombre del cliente" />
        </div>
        <div class="col">
            <input type="text" name="Product" value="@Model.Product" class="form-control" placeholder="Producto" />
        </div>
        <div class="col">
            <input type="date" name="FromDate" value="@(Model.FromDate?.ToString("yyyy-MM-dd"))" class="form-control" placeholder="Fecha Inicio" />
        </div>
        <div class="col">
            <input type="date" name="ToDate" value="@(Model.ToDate?.ToString("yyyy-MM-dd"))" class="form-control" placeholder="Fecha Fin" />
        </div>
        <div class="col">
            <button type="submit" class="btn btn-primary">Buscar</button>
        </div>
    </div>
</form>

@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div class="alert alert-warning">@Model.ErrorMessage</div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}

@if (Model.Orders != null && Model.Orders.Any())
{
    <form method="get">
        <input type="hidden" name="ClientName" value="@Model.ClientName" />
        <button type="submit" formaction="?handler=DownloadExcel" class="btn btn-success mb-2">Descargar Excel</button>
    </form>
    <table class="table table-bordered table-striped">
        <thead>
            <tr>
                <th>Cliente (nombre del cliente)</th>
                <th>Producto (nombre del producto)</th>
                <th>Cantidad (número de unidades)</th>
                <th>Origen (latitud, longitud)</th>
                <th>Destino (latitud, longitud)</th>
                <th>Distancia (km)</th>
                <th>Costo estimado (USD)</th>
                <th>Fecha de creación</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var order in Model.Orders)
        {
            <tr>
                <td>@order.Client</td>
                <td>@order.Product</td>
                <td>@order.Quantity</td>
                <td>@($"{order.Origin.Latitude}, {order.Origin.Longitude}")</td>
                <td>@($"{order.Destination.Latitude}, {order.Destination.Longitude}")</td>
                <td>@order.DistanceKm.ToString("F2")</td>
                <td>@order.EstimatedCost.ToString("C")</td>
                <td>@order.CreatedAt.ToString("g")</td>
                <td>
                    <a asp-page="/Orders/Details" asp-route-id="@order.Id" class="btn btn-info btn-sm">Ver</a>
                    <a asp-page="/Orders/Edit" asp-route-id="@order.Id" class="btn btn-primary btn-sm">Editar</a>
                    <a asp-page="/Orders/Delete" asp-route-id="@order.Id" class="btn btn-danger btn-sm">Eliminar</a>
                </td>
            </tr>
        }
        </tbody>
    </table>
    <div>
        @Html.PagedListPager(Model.Orders, page => Url.Page("ByClient", new { page, ClientName = Model.ClientName, Product = Model.Product, FromDate = Model.FromDate, ToDate = Model.ToDate }))
    </div>
}
else if (!string.IsNullOrWhiteSpace(Model.ClientName))
{
    <div class="alert alert-info">No hay órdenes para el cliente buscado.</div>
}